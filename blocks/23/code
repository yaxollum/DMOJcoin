#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

#define MAX 2005
typedef pair<int,int> ii;

struct gd
{
    int p1,p2,dd;
    bool operator<(const gd& other) const
    {
        return dd<other.dd;
    }

    void test_print()
    {
        printf("%d %d %d\n",p1,p2,dd);
    }
};

inline int square(int n)
{
    return n*n;
}

vector<gd> dists;
ii points[MAX]={{0,0}};
ii res[MAX];

int main()
{
    int n;
    scanf("%d",&n);

    for(int i=1;i<=n;++i)
    {
        scanf("%d%d",&points[i].first,&points[i].second);
    }

    dists.reserve(MAX*MAX/2);
    for(int i=0;i<=n;++i)
    {
        for(int j=i+1;j<=n;++j)
        {
            dists.push_back({i,j,square(points[i].first-points[j].first)+square(points[i].second-points[j].second)});
        }
    }

    sort(dists.begin(),dists.end());

    ii nres1,nres2;
    for(gd dist : dists)
    {
        nres1=res[dist.p1];
        nres2=res[dist.p2];

        if(res[dist.p1].second+1>res[dist.p2].second&&dist.dd>res[dist.p1].first&&dist.p1!=0)
        {
            nres2.second=res[dist.p1].second+1;
            nres2.first=dist.dd;
        }
        if(res[dist.p2].second+1>res[dist.p1].second&&dist.dd>res[dist.p2].first)
        {
            nres1.second=res[dist.p2].second+1;
            nres1.first=dist.dd;
        }

        res[dist.p1]=nres1;
        res[dist.p2]=nres2;
    }

    printf("%d",res[0].second);
}