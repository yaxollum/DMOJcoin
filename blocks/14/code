#include <iostream>
#include <algorithm>

#define max_dist 5280
#define max_clubs 32

using namespace std;

struct two_bool
{
	bool updated;
	bool reached_end;
	two_bool() : updated(false), reached_end(false) {}
};

int visited[max_dist+1];
int clubs[max_clubs];

two_bool step_all_forward(int current_step, int club_n, int total_dist)
{
	two_bool val;
	for (int dist = 0; dist <= total_dist; ++dist)
	{
		if (visited[dist] == current_step)
		{
			if (dist == total_dist)
			{
				val.reached_end = true;
			}

			int next_dist;
			for (int i = 0; i < club_n; ++i)
			{
				next_dist = dist + clubs[i];
				if (next_dist <= total_dist)
				{
					if (visited[next_dist] == -1)
					{
						visited[next_dist] = current_step + 1;
						val.updated = true;
					}
				}
			}
		}
	}
	return val;
}

int main()
{
	fill(visited, visited + max_dist + 1, -1);
	
	int total_dist;
	cin >> total_dist;
	
	int club_n;
	cin >> club_n;

	for (int i = 0; i < club_n; ++i)
	{
		cin >> clubs[i];
	}

	int current_step = 0;
	visited[0] = 0;
	two_bool temp;

	while (true)
	{
		temp = step_all_forward(current_step, club_n, total_dist);
		if (temp.reached_end || !temp.updated)
		{
			break;
		}
		++current_step;
	}

	if (temp.reached_end) cout << "Roberta wins in " << current_step << " strokes.";
	else cout << "Roberta acknowledges defeat.";
}